#pragma once
#include <nlohmann/json.hpp>
#include <unordered_map>

#include "opcode.hpp"
#include "instruction.hpp"

namespace dat
{
	using InstructionSet_t = std::unordered_map<opcode, s_Instruction>;

	inline InstructionSet_t InstructionSet =
	{
		{  0x0, s_Instruction("NOP", 0x0, 1, 4, 0) },
		{  0x1, s_Instruction("LD_BC_n16", 0x1, 3, 12, 0) },
		{  0x2, s_Instruction("LD_[BC]_A", 0x2, 1, 8, 0) },
		{  0x3, s_Instruction("INC_BC", 0x3, 1, 8, 0) },
		{  0x4, s_Instruction("INC_B", 0x4, 1, 4, 0) },
		{  0x5, s_Instruction("DEC_B", 0x5, 1, 4, 0) },
		{  0x6, s_Instruction("LD_B_n8", 0x6, 2, 8, 0) },
		{  0x7, s_Instruction("RLCA", 0x7, 1, 4, 0) },
		{  0x8, s_Instruction("LD_[a16]_SP", 0x8, 3, 20, 0) },
		{  0x9, s_Instruction("ADD_HL_BC", 0x9, 1, 8, 0) },
		{  0xA, s_Instruction("LD_A_[BC]", 0xA, 1, 8, 0) },
		{  0xB, s_Instruction("DEC_BC", 0xB, 1, 8, 0) },
		{  0xC, s_Instruction("INC_C", 0xC, 1, 4, 0) },
		{  0xD, s_Instruction("DEC_C", 0xD, 1, 4, 0) },
		{  0xE, s_Instruction("LD_C_n8", 0xE, 2, 8, 0) },
		{  0xF, s_Instruction("RRCA", 0xF, 1, 4, 0) },
		{ 0x10, s_Instruction("STOP_n8", 0x10, 2, 4, 0) },
		{ 0x11, s_Instruction("LD_DE_n16", 0x11, 3, 12, 0) },
		{ 0x12, s_Instruction("LD_[DE]_A", 0x12, 1, 8, 0) },
		{ 0x13, s_Instruction("INC_DE", 0x13, 1, 8, 0) },
		{ 0x14, s_Instruction("INC_D", 0x14, 1, 4, 0) },
		{ 0x15, s_Instruction("DEC_D", 0x15, 1, 4, 0) },
		{ 0x16, s_Instruction("LD_D_n8", 0x16, 2, 8, 0) },
		{ 0x17, s_Instruction("RLA", 0x17, 1, 4, 0) },
		{ 0x18, s_Instruction("JR_e8", 0x18, 2, 12, 0) },
		{ 0x19, s_Instruction("ADD_HL_DE", 0x19, 1, 8, 0) },
		{ 0x1A, s_Instruction("LD_A_[DE]", 0x1A, 1, 8, 0) },
		{ 0x1B, s_Instruction("DEC_DE", 0x1B, 1, 8, 0) },
		{ 0x1C, s_Instruction("INC_E", 0x1C, 1, 4, 0) },
		{ 0x1D, s_Instruction("DEC_E", 0x1D, 1, 4, 0) },
		{ 0x1E, s_Instruction("LD_E_n8", 0x1E, 2, 8, 0) },
		{ 0x1F, s_Instruction("RRA", 0x1F, 1, 4, 0) },
		{ 0x20, s_Instruction("JR_NZ_e8", 0x20, 2, 12, 8) },
		{ 0x21, s_Instruction("LD_HL_n16", 0x21, 3, 12, 0) },
		{ 0x22, s_Instruction("LD_[HL+]_A", 0x22, 1, 8, 0) },
		{ 0x23, s_Instruction("INC_HL", 0x23, 1, 8, 0) },
		{ 0x24, s_Instruction("INC_H", 0x24, 1, 4, 0) },
		{ 0x25, s_Instruction("DEC_H", 0x25, 1, 4, 0) },
		{ 0x26, s_Instruction("LD_H_n8", 0x26, 2, 8, 0) },
		{ 0x27, s_Instruction("DAA", 0x27, 1, 4, 0) },
		{ 0x28, s_Instruction("JR_Z_e8", 0x28, 2, 12, 8) },
		{ 0x29, s_Instruction("ADD_HL_HL", 0x29, 1, 8, 0) },
		{ 0x2A, s_Instruction("LD_A_[HL+]", 0x2A, 1, 8, 0) },
		{ 0x2B, s_Instruction("DEC_HL", 0x2B, 1, 8, 0) },
		{ 0x2C, s_Instruction("INC_L", 0x2C, 1, 4, 0) },
		{ 0x2D, s_Instruction("DEC_L", 0x2D, 1, 4, 0) },
		{ 0x2E, s_Instruction("LD_L_n8", 0x2E, 2, 8, 0) },
		{ 0x2F, s_Instruction("CPL", 0x2F, 1, 4, 0) },
		{ 0x30, s_Instruction("JR_NC_e8", 0x30, 2, 12, 8) },
		{ 0x31, s_Instruction("LD_SP_n16", 0x31, 3, 12, 0) },
		{ 0x32, s_Instruction("LD_[HL-]_A", 0x32, 1, 8, 0) },
		{ 0x33, s_Instruction("INC_SP", 0x33, 1, 8, 0) },
		{ 0x34, s_Instruction("INC_[HL]", 0x34, 1, 12, 0) },
		{ 0x35, s_Instruction("DEC_[HL]", 0x35, 1, 12, 0) },
		{ 0x36, s_Instruction("LD_[HL]_n8", 0x36, 2, 12, 0) },
		{ 0x37, s_Instruction("SCF", 0x37, 1, 4, 0) },
		{ 0x38, s_Instruction("JR_C_e8", 0x38, 2, 12, 8) },
		{ 0x39, s_Instruction("ADD_HL_SP", 0x39, 1, 8, 0) },
		{ 0x3A, s_Instruction("LD_A_[HL-]", 0x3A, 1, 8, 0) },
		{ 0x3B, s_Instruction("DEC_SP", 0x3B, 1, 8, 0) },
		{ 0x3C, s_Instruction("INC_A", 0x3C, 1, 4, 0) },
		{ 0x3D, s_Instruction("DEC_A", 0x3D, 1, 4, 0) },
		{ 0x3E, s_Instruction("LD_A_n8", 0x3E, 2, 8, 0) },
		{ 0x3F, s_Instruction("CCF", 0x3F, 1, 4, 0) },
		{ 0x40, s_Instruction("LD_B_B", 0x40, 1, 4, 0) },
		{ 0x41, s_Instruction("LD_B_C", 0x41, 1, 4, 0) },
		{ 0x42, s_Instruction("LD_B_D", 0x42, 1, 4, 0) },
		{ 0x43, s_Instruction("LD_B_E", 0x43, 1, 4, 0) },
		{ 0x44, s_Instruction("LD_B_H", 0x44, 1, 4, 0) },
		{ 0x45, s_Instruction("LD_B_L", 0x45, 1, 4, 0) },
		{ 0x46, s_Instruction("LD_B_[HL]", 0x46, 1, 8, 0) },
		{ 0x47, s_Instruction("LD_B_A", 0x47, 1, 4, 0) },
		{ 0x48, s_Instruction("LD_C_B", 0x48, 1, 4, 0) },
		{ 0x49, s_Instruction("LD_C_C", 0x49, 1, 4, 0) },
		{ 0x4A, s_Instruction("LD_C_D", 0x4A, 1, 4, 0) },
		{ 0x4B, s_Instruction("LD_C_E", 0x4B, 1, 4, 0) },
		{ 0x4C, s_Instruction("LD_C_H", 0x4C, 1, 4, 0) },
		{ 0x4D, s_Instruction("LD_C_L", 0x4D, 1, 4, 0) },
		{ 0x4E, s_Instruction("LD_C_[HL]", 0x4E, 1, 8, 0) },
		{ 0x4F, s_Instruction("LD_C_A", 0x4F, 1, 4, 0) },
		{ 0x50, s_Instruction("LD_D_B", 0x50, 1, 4, 0) },
		{ 0x51, s_Instruction("LD_D_C", 0x51, 1, 4, 0) },
		{ 0x52, s_Instruction("LD_D_D", 0x52, 1, 4, 0) },
		{ 0x53, s_Instruction("LD_D_E", 0x53, 1, 4, 0) },
		{ 0x54, s_Instruction("LD_D_H", 0x54, 1, 4, 0) },
		{ 0x55, s_Instruction("LD_D_L", 0x55, 1, 4, 0) },
		{ 0x56, s_Instruction("LD_D_[HL]", 0x56, 1, 8, 0) },
		{ 0x57, s_Instruction("LD_D_A", 0x57, 1, 4, 0) },
		{ 0x58, s_Instruction("LD_E_B", 0x58, 1, 4, 0) },
		{ 0x59, s_Instruction("LD_E_C", 0x59, 1, 4, 0) },
		{ 0x5A, s_Instruction("LD_E_D", 0x5A, 1, 4, 0) },
		{ 0x5B, s_Instruction("LD_E_E", 0x5B, 1, 4, 0) },
		{ 0x5C, s_Instruction("LD_E_H", 0x5C, 1, 4, 0) },
		{ 0x5D, s_Instruction("LD_E_L", 0x5D, 1, 4, 0) },
		{ 0x5E, s_Instruction("LD_E_[HL]", 0x5E, 1, 8, 0) },
		{ 0x5F, s_Instruction("LD_E_A", 0x5F, 1, 4, 0) },
		{ 0x60, s_Instruction("LD_H_B", 0x60, 1, 4, 0) },
		{ 0x61, s_Instruction("LD_H_C", 0x61, 1, 4, 0) },
		{ 0x62, s_Instruction("LD_H_D", 0x62, 1, 4, 0) },
		{ 0x63, s_Instruction("LD_H_E", 0x63, 1, 4, 0) },
		{ 0x64, s_Instruction("LD_H_H", 0x64, 1, 4, 0) },
		{ 0x65, s_Instruction("LD_H_L", 0x65, 1, 4, 0) },
		{ 0x66, s_Instruction("LD_H_[HL]", 0x66, 1, 8, 0) },
		{ 0x67, s_Instruction("LD_H_A", 0x67, 1, 4, 0) },
		{ 0x68, s_Instruction("LD_L_B", 0x68, 1, 4, 0) },
		{ 0x69, s_Instruction("LD_L_C", 0x69, 1, 4, 0) },
		{ 0x6A, s_Instruction("LD_L_D", 0x6A, 1, 4, 0) },
		{ 0x6B, s_Instruction("LD_L_E", 0x6B, 1, 4, 0) },
		{ 0x6C, s_Instruction("LD_L_H", 0x6C, 1, 4, 0) },
		{ 0x6D, s_Instruction("LD_L_L", 0x6D, 1, 4, 0) },
		{ 0x6E, s_Instruction("LD_L_[HL]", 0x6E, 1, 8, 0) },
		{ 0x6F, s_Instruction("LD_L_A", 0x6F, 1, 4, 0) },
		{ 0x70, s_Instruction("LD_[HL]_B", 0x70, 1, 8, 0) },
		{ 0x71, s_Instruction("LD_[HL]_C", 0x71, 1, 8, 0) },
		{ 0x72, s_Instruction("LD_[HL]_D", 0x72, 1, 8, 0) },
		{ 0x73, s_Instruction("LD_[HL]_E", 0x73, 1, 8, 0) },
		{ 0x74, s_Instruction("LD_[HL]_H", 0x74, 1, 8, 0) },
		{ 0x75, s_Instruction("LD_[HL]_L", 0x75, 1, 8, 0) },
		{ 0x76, s_Instruction("HALT", 0x76, 1, 4, 0) },
		{ 0x77, s_Instruction("LD_[HL]_A", 0x77, 1, 8, 0) },
		{ 0x78, s_Instruction("LD_A_B", 0x78, 1, 4, 0) },
		{ 0x79, s_Instruction("LD_A_C", 0x79, 1, 4, 0) },
		{ 0x7A, s_Instruction("LD_A_D", 0x7A, 1, 4, 0) },
		{ 0x7B, s_Instruction("LD_A_E", 0x7B, 1, 4, 0) },
		{ 0x7C, s_Instruction("LD_A_H", 0x7C, 1, 4, 0) },
		{ 0x7D, s_Instruction("LD_A_L", 0x7D, 1, 4, 0) },
		{ 0x7E, s_Instruction("LD_A_[HL]", 0x7E, 1, 8, 0) },
		{ 0x7F, s_Instruction("LD_A_A", 0x7F, 1, 4, 0) },
		{ 0x80, s_Instruction("ADD_A_B", 0x80, 1, 4, 0) },
		{ 0x81, s_Instruction("ADD_A_C", 0x81, 1, 4, 0) },
		{ 0x82, s_Instruction("ADD_A_D", 0x82, 1, 4, 0) },
		{ 0x83, s_Instruction("ADD_A_E", 0x83, 1, 4, 0) },
		{ 0x84, s_Instruction("ADD_A_H", 0x84, 1, 4, 0) },
		{ 0x85, s_Instruction("ADD_A_L", 0x85, 1, 4, 0) },
		{ 0x86, s_Instruction("ADD_A_[HL]", 0x86, 1, 8, 0) },
		{ 0x87, s_Instruction("ADD_A_A", 0x87, 1, 4, 0) },
		{ 0x88, s_Instruction("ADC_A_B", 0x88, 1, 4, 0) },
		{ 0x89, s_Instruction("ADC_A_C", 0x89, 1, 4, 0) },
		{ 0x8A, s_Instruction("ADC_A_D", 0x8A, 1, 4, 0) },
		{ 0x8B, s_Instruction("ADC_A_E", 0x8B, 1, 4, 0) },
		{ 0x8C, s_Instruction("ADC_A_H", 0x8C, 1, 4, 0) },
		{ 0x8D, s_Instruction("ADC_A_L", 0x8D, 1, 4, 0) },
		{ 0x8E, s_Instruction("ADC_A_[HL]", 0x8E, 1, 8, 0) },
		{ 0x8F, s_Instruction("ADC_A_A", 0x8F, 1, 4, 0) },
		{ 0x90, s_Instruction("SUB_A_B", 0x90, 1, 4, 0) },
		{ 0x91, s_Instruction("SUB_A_C", 0x91, 1, 4, 0) },
		{ 0x92, s_Instruction("SUB_A_D", 0x92, 1, 4, 0) },
		{ 0x93, s_Instruction("SUB_A_E", 0x93, 1, 4, 0) },
		{ 0x94, s_Instruction("SUB_A_H", 0x94, 1, 4, 0) },
		{ 0x95, s_Instruction("SUB_A_L", 0x95, 1, 4, 0) },
		{ 0x96, s_Instruction("SUB_A_[HL]", 0x96, 1, 8, 0) },
		{ 0x97, s_Instruction("SUB_A_A", 0x97, 1, 4, 0) },
		{ 0x98, s_Instruction("SBC_A_B", 0x98, 1, 4, 0) },
		{ 0x99, s_Instruction("SBC_A_C", 0x99, 1, 4, 0) },
		{ 0x9A, s_Instruction("SBC_A_D", 0x9A, 1, 4, 0) },
		{ 0x9B, s_Instruction("SBC_A_E", 0x9B, 1, 4, 0) },
		{ 0x9C, s_Instruction("SBC_A_H", 0x9C, 1, 4, 0) },
		{ 0x9D, s_Instruction("SBC_A_L", 0x9D, 1, 4, 0) },
		{ 0x9E, s_Instruction("SBC_A_[HL]", 0x9E, 1, 8, 0) },
		{ 0x9F, s_Instruction("SBC_A_A", 0x9F, 1, 4, 0) },
		{ 0xA0, s_Instruction("AND_A_B", 0xA0, 1, 4, 0) },
		{ 0xA1, s_Instruction("AND_A_C", 0xA1, 1, 4, 0) },
		{ 0xA2, s_Instruction("AND_A_D", 0xA2, 1, 4, 0) },
		{ 0xA3, s_Instruction("AND_A_E", 0xA3, 1, 4, 0) },
		{ 0xA4, s_Instruction("AND_A_H", 0xA4, 1, 4, 0) },
		{ 0xA5, s_Instruction("AND_A_L", 0xA5, 1, 4, 0) },
		{ 0xA6, s_Instruction("AND_A_[HL]", 0xA6, 1, 8, 0) },
		{ 0xA7, s_Instruction("AND_A_A", 0xA7, 1, 4, 0) },
		{ 0xA8, s_Instruction("XOR_A_B", 0xA8, 1, 4, 0) },
		{ 0xA9, s_Instruction("XOR_A_C", 0xA9, 1, 4, 0) },
		{ 0xAA, s_Instruction("XOR_A_D", 0xAA, 1, 4, 0) },
		{ 0xAB, s_Instruction("XOR_A_E", 0xAB, 1, 4, 0) },
		{ 0xAC, s_Instruction("XOR_A_H", 0xAC, 1, 4, 0) },
		{ 0xAD, s_Instruction("XOR_A_L", 0xAD, 1, 4, 0) },
		{ 0xAE, s_Instruction("XOR_A_[HL]", 0xAE, 1, 8, 0) },
		{ 0xAF, s_Instruction("XOR_A_A", 0xAF, 1, 4, 0) },
		{ 0xB0, s_Instruction("OR_A_B", 0xB0, 1, 4, 0) },
		{ 0xB1, s_Instruction("OR_A_C", 0xB1, 1, 4, 0) },
		{ 0xB2, s_Instruction("OR_A_D", 0xB2, 1, 4, 0) },
		{ 0xB3, s_Instruction("OR_A_E", 0xB3, 1, 4, 0) },
		{ 0xB4, s_Instruction("OR_A_H", 0xB4, 1, 4, 0) },
		{ 0xB5, s_Instruction("OR_A_L", 0xB5, 1, 4, 0) },
		{ 0xB6, s_Instruction("OR_A_[HL]", 0xB6, 1, 8, 0) },
		{ 0xB7, s_Instruction("OR_A_A", 0xB7, 1, 4, 0) },
		{ 0xB8, s_Instruction("CP_A_B", 0xB8, 1, 4, 0) },
		{ 0xB9, s_Instruction("CP_A_C", 0xB9, 1, 4, 0) },
		{ 0xBA, s_Instruction("CP_A_D", 0xBA, 1, 4, 0) },
		{ 0xBB, s_Instruction("CP_A_E", 0xBB, 1, 4, 0) },
		{ 0xBC, s_Instruction("CP_A_H", 0xBC, 1, 4, 0) },
		{ 0xBD, s_Instruction("CP_A_L", 0xBD, 1, 4, 0) },
		{ 0xBE, s_Instruction("CP_A_[HL]", 0xBE, 1, 8, 0) },
		{ 0xBF, s_Instruction("CP_A_A", 0xBF, 1, 4, 0) },
		{ 0xC0, s_Instruction("RET_NZ", 0xC0, 1, 20, 8) },
		{ 0xC1, s_Instruction("POP_BC", 0xC1, 1, 12, 0) },
		{ 0xC2, s_Instruction("JP_NZ_a16", 0xC2, 3, 16, 12) },
		{ 0xC3, s_Instruction("JP_a16", 0xC3, 3, 16, 0) },
		{ 0xC4, s_Instruction("CALL_NZ_a16", 0xC4, 3, 24, 12) },
		{ 0xC5, s_Instruction("PUSH_BC", 0xC5, 1, 16, 0) },
		{ 0xC6, s_Instruction("ADD_A_n8", 0xC6, 2, 8, 0) },
		{ 0xC7, s_Instruction("RST_$00", 0xC7, 1, 16, 0) },
		{ 0xC8, s_Instruction("RET_Z", 0xC8, 1, 20, 8) },
		{ 0xC9, s_Instruction("RET", 0xC9, 1, 16, 0) },
		{ 0xCA, s_Instruction("JP_Z_a16", 0xCA, 3, 16, 12) },
		{ 0xCB, s_Instruction("PREFIX", 0xCB, 1, 4, 0) },
		{ 0xCC, s_Instruction("CALL_Z_a16", 0xCC, 3, 24, 12) },
		{ 0xCD, s_Instruction("CALL_a16", 0xCD, 3, 24, 0) },
		{ 0xCE, s_Instruction("ADC_A_n8", 0xCE, 2, 8, 0) },
		{ 0xCF, s_Instruction("RST_$08", 0xCF, 1, 16, 0) },
		{ 0xD0, s_Instruction("RET_NC", 0xD0, 1, 20, 8) },
		{ 0xD1, s_Instruction("POP_DE", 0xD1, 1, 12, 0) },
		{ 0xD2, s_Instruction("JP_NC_a16", 0xD2, 3, 16, 12) },
		{ 0xD3, s_Instruction("ILLEGAL_D3", 0xD3, 1, 4, 0) },
		{ 0xD4, s_Instruction("CALL_NC_a16", 0xD4, 3, 24, 12) },
		{ 0xD5, s_Instruction("PUSH_DE", 0xD5, 1, 16, 0) },
		{ 0xD6, s_Instruction("SUB_A_n8", 0xD6, 2, 8, 0) },
		{ 0xD7, s_Instruction("RST_$10", 0xD7, 1, 16, 0) },
		{ 0xD8, s_Instruction("RET_C", 0xD8, 1, 20, 8) },
		{ 0xD9, s_Instruction("RETI", 0xD9, 1, 16, 0) },
		{ 0xDA, s_Instruction("JP_C_a16", 0xDA, 3, 16, 12) },
		{ 0xDB, s_Instruction("ILLEGAL_DB", 0xDB, 1, 4, 0) },
		{ 0xDC, s_Instruction("CALL_C_a16", 0xDC, 3, 24, 12) },
		{ 0xDD, s_Instruction("ILLEGAL_DD", 0xDD, 1, 4, 0) },
		{ 0xDE, s_Instruction("SBC_A_n8", 0xDE, 2, 8, 0) },
		{ 0xDF, s_Instruction("RST_$18", 0xDF, 1, 16, 0) },
		{ 0xE0, s_Instruction("LDH_[a8]_A", 0xE0, 2, 12, 0) },
		{ 0xE1, s_Instruction("POP_HL", 0xE1, 1, 12, 0) },
		{ 0xE2, s_Instruction("LD_[C]_A", 0xE2, 1, 8, 0) },
		{ 0xE3, s_Instruction("ILLEGAL_E3", 0xE3, 1, 4, 0) },
		{ 0xE4, s_Instruction("ILLEGAL_E4", 0xE4, 1, 4, 0) },
		{ 0xE5, s_Instruction("PUSH_HL", 0xE5, 1, 16, 0) },
		{ 0xE6, s_Instruction("AND_A_n8", 0xE6, 2, 8, 0) },
		{ 0xE7, s_Instruction("RST_$20", 0xE7, 1, 16, 0) },
		{ 0xE8, s_Instruction("ADD_SP_e8", 0xE8, 2, 16, 0) },
		{ 0xE9, s_Instruction("JP_HL", 0xE9, 1, 4, 0) },
		{ 0xEA, s_Instruction("LD_[a16]_A", 0xEA, 3, 16, 0) },
		{ 0xEB, s_Instruction("ILLEGAL_EB", 0xEB, 1, 4, 0) },
		{ 0xEC, s_Instruction("ILLEGAL_EC", 0xEC, 1, 4, 0) },
		{ 0xED, s_Instruction("ILLEGAL_ED", 0xED, 1, 4, 0) },
		{ 0xEE, s_Instruction("XOR_A_n8", 0xEE, 2, 8, 0) },
		{ 0xEF, s_Instruction("RST_$28", 0xEF, 1, 16, 0) },
		{ 0xF0, s_Instruction("LDH_A_[a8]", 0xF0, 2, 12, 0) },
		{ 0xF1, s_Instruction("POP_AF", 0xF1, 1, 12, 0) },
		{ 0xF2, s_Instruction("LD_A_[C]", 0xF2, 1, 8, 0) },
		{ 0xF3, s_Instruction("DI", 0xF3, 1, 4, 0) },
		{ 0xF4, s_Instruction("ILLEGAL_F4", 0xF4, 1, 4, 0) },
		{ 0xF5, s_Instruction("PUSH_AF", 0xF5, 1, 16, 0) },
		{ 0xF6, s_Instruction("OR_A_n8", 0xF6, 2, 8, 0) },
		{ 0xF7, s_Instruction("RST_$30", 0xF7, 1, 16, 0) },
		{ 0xF8, s_Instruction("LD_HL_SP+_e8", 0xF8, 2, 12, 0) },
		{ 0xF9, s_Instruction("LD_SP_HL", 0xF9, 1, 8, 0) },
		{ 0xFA, s_Instruction("LD_A_[a16]", 0xFA, 3, 16, 0) },
		{ 0xFB, s_Instruction("EI", 0xFB, 1, 4, 0) },
		{ 0xFC, s_Instruction("ILLEGAL_FC", 0xFC, 1, 4, 0) },
		{ 0xFD, s_Instruction("ILLEGAL_FD", 0xFD, 1, 4, 0) },
		{ 0xFE, s_Instruction("CP_A_n8", 0xFE, 2, 8, 0) },
		{ 0xFF, s_Instruction("RST_$38", 0xFF, 1, 16, 0) },
	};

	inline InstructionSet_t PrefixedInstructionSet =
	{
		{  0x0, s_Instruction("RLC_B", 0x0, 2, 4, 0) },
		{  0x1, s_Instruction("RLC_C", 0x1, 2, 4, 0) },
		{  0x2, s_Instruction("RLC_D", 0x2, 2, 4, 0) },
		{  0x3, s_Instruction("RLC_E", 0x3, 2, 4, 0) },
		{  0x4, s_Instruction("RLC_H", 0x4, 2, 4, 0) },
		{  0x5, s_Instruction("RLC_L", 0x5, 2, 4, 0) },
		{  0x6, s_Instruction("RLC_[HL]", 0x6, 2, 12, 0) },
		{  0x7, s_Instruction("RLC_A", 0x7, 2, 4, 0) },
		{  0x8, s_Instruction("RRC_B", 0x8, 2, 4, 0) },
		{  0x9, s_Instruction("RRC_C", 0x9, 2, 4, 0) },
		{  0xA, s_Instruction("RRC_D", 0xA, 2, 4, 0) },
		{  0xB, s_Instruction("RRC_E", 0xB, 2, 4, 0) },
		{  0xC, s_Instruction("RRC_H", 0xC, 2, 4, 0) },
		{  0xD, s_Instruction("RRC_L", 0xD, 2, 4, 0) },
		{  0xE, s_Instruction("RRC_[HL]", 0xE, 2, 12, 0) },
		{  0xF, s_Instruction("RRC_A", 0xF, 2, 4, 0) },
		{ 0x10, s_Instruction("RL_B", 0x10, 2, 4, 0) },
		{ 0x11, s_Instruction("RL_C", 0x11, 2, 4, 0) },
		{ 0x12, s_Instruction("RL_D", 0x12, 2, 4, 0) },
		{ 0x13, s_Instruction("RL_E", 0x13, 2, 4, 0) },
		{ 0x14, s_Instruction("RL_H", 0x14, 2, 4, 0) },
		{ 0x15, s_Instruction("RL_L", 0x15, 2, 4, 0) },
		{ 0x16, s_Instruction("RL_[HL]", 0x16, 2, 12, 0) },
		{ 0x17, s_Instruction("RL_A", 0x17, 2, 4, 0) },
		{ 0x18, s_Instruction("RR_B", 0x18, 2, 4, 0) },
		{ 0x19, s_Instruction("RR_C", 0x19, 2, 4, 0) },
		{ 0x1A, s_Instruction("RR_D", 0x1A, 2, 4, 0) },
		{ 0x1B, s_Instruction("RR_E", 0x1B, 2, 4, 0) },
		{ 0x1C, s_Instruction("RR_H", 0x1C, 2, 4, 0) },
		{ 0x1D, s_Instruction("RR_L", 0x1D, 2, 4, 0) },
		{ 0x1E, s_Instruction("RR_[HL]", 0x1E, 2, 12, 0) },
		{ 0x1F, s_Instruction("RR_A", 0x1F, 2, 4, 0) },
		{ 0x20, s_Instruction("SLA_B", 0x20, 2, 4, 0) },
		{ 0x21, s_Instruction("SLA_C", 0x21, 2, 4, 0) },
		{ 0x22, s_Instruction("SLA_D", 0x22, 2, 4, 0) },
		{ 0x23, s_Instruction("SLA_E", 0x23, 2, 4, 0) },
		{ 0x24, s_Instruction("SLA_H", 0x24, 2, 4, 0) },
		{ 0x25, s_Instruction("SLA_L", 0x25, 2, 4, 0) },
		{ 0x26, s_Instruction("SLA_[HL]", 0x26, 2, 12, 0) },
		{ 0x27, s_Instruction("SLA_A", 0x27, 2, 4, 0) },
		{ 0x28, s_Instruction("SRA_B", 0x28, 2, 4, 0) },
		{ 0x29, s_Instruction("SRA_C", 0x29, 2, 4, 0) },
		{ 0x2A, s_Instruction("SRA_D", 0x2A, 2, 4, 0) },
		{ 0x2B, s_Instruction("SRA_E", 0x2B, 2, 4, 0) },
		{ 0x2C, s_Instruction("SRA_H", 0x2C, 2, 4, 0) },
		{ 0x2D, s_Instruction("SRA_L", 0x2D, 2, 4, 0) },
		{ 0x2E, s_Instruction("SRA_[HL]", 0x2E, 2, 12, 0) },
		{ 0x2F, s_Instruction("SRA_A", 0x2F, 2, 4, 0) },
		{ 0x30, s_Instruction("SWAP_B", 0x30, 2, 4, 0) },
		{ 0x31, s_Instruction("SWAP_C", 0x31, 2, 4, 0) },
		{ 0x32, s_Instruction("SWAP_D", 0x32, 2, 4, 0) },
		{ 0x33, s_Instruction("SWAP_E", 0x33, 2, 4, 0) },
		{ 0x34, s_Instruction("SWAP_H", 0x34, 2, 4, 0) },
		{ 0x35, s_Instruction("SWAP_L", 0x35, 2, 4, 0) },
		{ 0x36, s_Instruction("SWAP_[HL]", 0x36, 2, 12, 0) },
		{ 0x37, s_Instruction("SWAP_A", 0x37, 2, 4, 0) },
		{ 0x38, s_Instruction("SRL_B", 0x38, 2, 4, 0) },
		{ 0x39, s_Instruction("SRL_C", 0x39, 2, 4, 0) },
		{ 0x3A, s_Instruction("SRL_D", 0x3A, 2, 4, 0) },
		{ 0x3B, s_Instruction("SRL_E", 0x3B, 2, 4, 0) },
		{ 0x3C, s_Instruction("SRL_H", 0x3C, 2, 4, 0) },
		{ 0x3D, s_Instruction("SRL_L", 0x3D, 2, 4, 0) },
		{ 0x3E, s_Instruction("SRL_[HL]", 0x3E, 2, 12, 0) },
		{ 0x3F, s_Instruction("SRL_A", 0x3F, 2, 4, 0) },
		{ 0x40, s_Instruction("BIT_0_B", 0x40, 2, 4, 0) },
		{ 0x41, s_Instruction("BIT_0_C", 0x41, 2, 4, 0) },
		{ 0x42, s_Instruction("BIT_0_D", 0x42, 2, 4, 0) },
		{ 0x43, s_Instruction("BIT_0_E", 0x43, 2, 4, 0) },
		{ 0x44, s_Instruction("BIT_0_H", 0x44, 2, 4, 0) },
		{ 0x45, s_Instruction("BIT_0_L", 0x45, 2, 4, 0) },
		{ 0x46, s_Instruction("BIT_0_[HL]", 0x46, 2, 8, 0) },
		{ 0x47, s_Instruction("BIT_0_A", 0x47, 2, 4, 0) },
		{ 0x48, s_Instruction("BIT_1_B", 0x48, 2, 4, 0) },
		{ 0x49, s_Instruction("BIT_1_C", 0x49, 2, 4, 0) },
		{ 0x4A, s_Instruction("BIT_1_D", 0x4A, 2, 4, 0) },
		{ 0x4B, s_Instruction("BIT_1_E", 0x4B, 2, 4, 0) },
		{ 0x4C, s_Instruction("BIT_1_H", 0x4C, 2, 4, 0) },
		{ 0x4D, s_Instruction("BIT_1_L", 0x4D, 2, 4, 0) },
		{ 0x4E, s_Instruction("BIT_1_[HL]", 0x4E, 2, 8, 0) },
		{ 0x4F, s_Instruction("BIT_1_A", 0x4F, 2, 4, 0) },
		{ 0x50, s_Instruction("BIT_2_B", 0x50, 2, 4, 0) },
		{ 0x51, s_Instruction("BIT_2_C", 0x51, 2, 4, 0) },
		{ 0x52, s_Instruction("BIT_2_D", 0x52, 2, 4, 0) },
		{ 0x53, s_Instruction("BIT_2_E", 0x53, 2, 4, 0) },
		{ 0x54, s_Instruction("BIT_2_H", 0x54, 2, 4, 0) },
		{ 0x55, s_Instruction("BIT_2_L", 0x55, 2, 4, 0) },
		{ 0x56, s_Instruction("BIT_2_[HL]", 0x56, 2, 8, 0) },
		{ 0x57, s_Instruction("BIT_2_A", 0x57, 2, 4, 0) },
		{ 0x58, s_Instruction("BIT_3_B", 0x58, 2, 4, 0) },
		{ 0x59, s_Instruction("BIT_3_C", 0x59, 2, 4, 0) },
		{ 0x5A, s_Instruction("BIT_3_D", 0x5A, 2, 4, 0) },
		{ 0x5B, s_Instruction("BIT_3_E", 0x5B, 2, 4, 0) },
		{ 0x5C, s_Instruction("BIT_3_H", 0x5C, 2, 4, 0) },
		{ 0x5D, s_Instruction("BIT_3_L", 0x5D, 2, 4, 0) },
		{ 0x5E, s_Instruction("BIT_3_[HL]", 0x5E, 2, 8, 0) },
		{ 0x5F, s_Instruction("BIT_3_A", 0x5F, 2, 4, 0) },
		{ 0x60, s_Instruction("BIT_4_B", 0x60, 2, 4, 0) },
		{ 0x61, s_Instruction("BIT_4_C", 0x61, 2, 4, 0) },
		{ 0x62, s_Instruction("BIT_4_D", 0x62, 2, 4, 0) },
		{ 0x63, s_Instruction("BIT_4_E", 0x63, 2, 4, 0) },
		{ 0x64, s_Instruction("BIT_4_H", 0x64, 2, 4, 0) },
		{ 0x65, s_Instruction("BIT_4_L", 0x65, 2, 4, 0) },
		{ 0x66, s_Instruction("BIT_4_[HL]", 0x66, 2, 8, 0) },
		{ 0x67, s_Instruction("BIT_4_A", 0x67, 2, 4, 0) },
		{ 0x68, s_Instruction("BIT_5_B", 0x68, 2, 4, 0) },
		{ 0x69, s_Instruction("BIT_5_C", 0x69, 2, 4, 0) },
		{ 0x6A, s_Instruction("BIT_5_D", 0x6A, 2, 4, 0) },
		{ 0x6B, s_Instruction("BIT_5_E", 0x6B, 2, 4, 0) },
		{ 0x6C, s_Instruction("BIT_5_H", 0x6C, 2, 4, 0) },
		{ 0x6D, s_Instruction("BIT_5_L", 0x6D, 2, 4, 0) },
		{ 0x6E, s_Instruction("BIT_5_[HL]", 0x6E, 2, 8, 0) },
		{ 0x6F, s_Instruction("BIT_5_A", 0x6F, 2, 4, 0) },
		{ 0x70, s_Instruction("BIT_6_B", 0x70, 2, 4, 0) },
		{ 0x71, s_Instruction("BIT_6_C", 0x71, 2, 4, 0) },
		{ 0x72, s_Instruction("BIT_6_D", 0x72, 2, 4, 0) },
		{ 0x73, s_Instruction("BIT_6_E", 0x73, 2, 4, 0) },
		{ 0x74, s_Instruction("BIT_6_H", 0x74, 2, 4, 0) },
		{ 0x75, s_Instruction("BIT_6_L", 0x75, 2, 4, 0) },
		{ 0x76, s_Instruction("BIT_6_[HL]", 0x76, 2, 8, 0) },
		{ 0x77, s_Instruction("BIT_6_A", 0x77, 2, 4, 0) },
		{ 0x78, s_Instruction("BIT_7_B", 0x78, 2, 4, 0) },
		{ 0x79, s_Instruction("BIT_7_C", 0x79, 2, 4, 0) },
		{ 0x7A, s_Instruction("BIT_7_D", 0x7A, 2, 4, 0) },
		{ 0x7B, s_Instruction("BIT_7_E", 0x7B, 2, 4, 0) },
		{ 0x7C, s_Instruction("BIT_7_H", 0x7C, 2, 4, 0) },
		{ 0x7D, s_Instruction("BIT_7_L", 0x7D, 2, 4, 0) },
		{ 0x7E, s_Instruction("BIT_7_[HL]", 0x7E, 2, 8, 0) },
		{ 0x7F, s_Instruction("BIT_7_A", 0x7F, 2, 4, 0) },
		{ 0x80, s_Instruction("RES_0_B", 0x80, 2, 4, 0) },
		{ 0x81, s_Instruction("RES_0_C", 0x81, 2, 4, 0) },
		{ 0x82, s_Instruction("RES_0_D", 0x82, 2, 4, 0) },
		{ 0x83, s_Instruction("RES_0_E", 0x83, 2, 4, 0) },
		{ 0x84, s_Instruction("RES_0_H", 0x84, 2, 4, 0) },
		{ 0x85, s_Instruction("RES_0_L", 0x85, 2, 4, 0) },
		{ 0x86, s_Instruction("RES_0_[HL]", 0x86, 2, 12, 0) },
		{ 0x87, s_Instruction("RES_0_A", 0x87, 2, 4, 0) },
		{ 0x88, s_Instruction("RES_1_B", 0x88, 2, 4, 0) },
		{ 0x89, s_Instruction("RES_1_C", 0x89, 2, 4, 0) },
		{ 0x8A, s_Instruction("RES_1_D", 0x8A, 2, 4, 0) },
		{ 0x8B, s_Instruction("RES_1_E", 0x8B, 2, 4, 0) },
		{ 0x8C, s_Instruction("RES_1_H", 0x8C, 2, 4, 0) },
		{ 0x8D, s_Instruction("RES_1_L", 0x8D, 2, 4, 0) },
		{ 0x8E, s_Instruction("RES_1_[HL]", 0x8E, 2, 12, 0) },
		{ 0x8F, s_Instruction("RES_1_A", 0x8F, 2, 4, 0) },
		{ 0x90, s_Instruction("RES_2_B", 0x90, 2, 4, 0) },
		{ 0x91, s_Instruction("RES_2_C", 0x91, 2, 4, 0) },
		{ 0x92, s_Instruction("RES_2_D", 0x92, 2, 4, 0) },
		{ 0x93, s_Instruction("RES_2_E", 0x93, 2, 4, 0) },
		{ 0x94, s_Instruction("RES_2_H", 0x94, 2, 4, 0) },
		{ 0x95, s_Instruction("RES_2_L", 0x95, 2, 4, 0) },
		{ 0x96, s_Instruction("RES_2_[HL]", 0x96, 2, 12, 0) },
		{ 0x97, s_Instruction("RES_2_A", 0x97, 2, 4, 0) },
		{ 0x98, s_Instruction("RES_3_B", 0x98, 2, 4, 0) },
		{ 0x99, s_Instruction("RES_3_C", 0x99, 2, 4, 0) },
		{ 0x9A, s_Instruction("RES_3_D", 0x9A, 2, 4, 0) },
		{ 0x9B, s_Instruction("RES_3_E", 0x9B, 2, 4, 0) },
		{ 0x9C, s_Instruction("RES_3_H", 0x9C, 2, 4, 0) },
		{ 0x9D, s_Instruction("RES_3_L", 0x9D, 2, 4, 0) },
		{ 0x9E, s_Instruction("RES_3_[HL]", 0x9E, 2, 12, 0) },
		{ 0x9F, s_Instruction("RES_3_A", 0x9F, 2, 4, 0) },
		{ 0xA0, s_Instruction("RES_4_B", 0xA0, 2, 4, 0) },
		{ 0xA1, s_Instruction("RES_4_C", 0xA1, 2, 4, 0) },
		{ 0xA2, s_Instruction("RES_4_D", 0xA2, 2, 4, 0) },
		{ 0xA3, s_Instruction("RES_4_E", 0xA3, 2, 4, 0) },
		{ 0xA4, s_Instruction("RES_4_H", 0xA4, 2, 4, 0) },
		{ 0xA5, s_Instruction("RES_4_L", 0xA5, 2, 4, 0) },
		{ 0xA6, s_Instruction("RES_4_[HL]", 0xA6, 2, 12, 0) },
		{ 0xA7, s_Instruction("RES_4_A", 0xA7, 2, 4, 0) },
		{ 0xA8, s_Instruction("RES_5_B", 0xA8, 2, 4, 0) },
		{ 0xA9, s_Instruction("RES_5_C", 0xA9, 2, 4, 0) },
		{ 0xAA, s_Instruction("RES_5_D", 0xAA, 2, 4, 0) },
		{ 0xAB, s_Instruction("RES_5_E", 0xAB, 2, 4, 0) },
		{ 0xAC, s_Instruction("RES_5_H", 0xAC, 2, 4, 0) },
		{ 0xAD, s_Instruction("RES_5_L", 0xAD, 2, 4, 0) },
		{ 0xAE, s_Instruction("RES_5_[HL]", 0xAE, 2, 12, 0) },
		{ 0xAF, s_Instruction("RES_5_A", 0xAF, 2, 4, 0) },
		{ 0xB0, s_Instruction("RES_6_B", 0xB0, 2, 4, 0) },
		{ 0xB1, s_Instruction("RES_6_C", 0xB1, 2, 4, 0) },
		{ 0xB2, s_Instruction("RES_6_D", 0xB2, 2, 4, 0) },
		{ 0xB3, s_Instruction("RES_6_E", 0xB3, 2, 4, 0) },
		{ 0xB4, s_Instruction("RES_6_H", 0xB4, 2, 4, 0) },
		{ 0xB5, s_Instruction("RES_6_L", 0xB5, 2, 4, 0) },
		{ 0xB6, s_Instruction("RES_6_[HL]", 0xB6, 2, 12, 0) },
		{ 0xB7, s_Instruction("RES_6_A", 0xB7, 2, 4, 0) },
		{ 0xB8, s_Instruction("RES_7_B", 0xB8, 2, 4, 0) },
		{ 0xB9, s_Instruction("RES_7_C", 0xB9, 2, 4, 0) },
		{ 0xBA, s_Instruction("RES_7_D", 0xBA, 2, 4, 0) },
		{ 0xBB, s_Instruction("RES_7_E", 0xBB, 2, 4, 0) },
		{ 0xBC, s_Instruction("RES_7_H", 0xBC, 2, 4, 0) },
		{ 0xBD, s_Instruction("RES_7_L", 0xBD, 2, 4, 0) },
		{ 0xBE, s_Instruction("RES_7_[HL]", 0xBE, 2, 12, 0) },
		{ 0xBF, s_Instruction("RES_7_A", 0xBF, 2, 4, 0) },
		{ 0xC0, s_Instruction("SET_0_B", 0xC0, 2, 4, 0) },
		{ 0xC1, s_Instruction("SET_0_C", 0xC1, 2, 4, 0) },
		{ 0xC2, s_Instruction("SET_0_D", 0xC2, 2, 4, 0) },
		{ 0xC3, s_Instruction("SET_0_E", 0xC3, 2, 4, 0) },
		{ 0xC4, s_Instruction("SET_0_H", 0xC4, 2, 4, 0) },
		{ 0xC5, s_Instruction("SET_0_L", 0xC5, 2, 4, 0) },
		{ 0xC6, s_Instruction("SET_0_[HL]", 0xC6, 2, 12, 0) },
		{ 0xC7, s_Instruction("SET_0_A", 0xC7, 2, 4, 0) },
		{ 0xC8, s_Instruction("SET_1_B", 0xC8, 2, 4, 0) },
		{ 0xC9, s_Instruction("SET_1_C", 0xC9, 2, 4, 0) },
		{ 0xCA, s_Instruction("SET_1_D", 0xCA, 2, 4, 0) },
		{ 0xCB, s_Instruction("SET_1_E", 0xCB, 2, 4, 0) },
		{ 0xCC, s_Instruction("SET_1_H", 0xCC, 2, 4, 0) },
		{ 0xCD, s_Instruction("SET_1_L", 0xCD, 2, 4, 0) },
		{ 0xCE, s_Instruction("SET_1_[HL]", 0xCE, 2, 12, 0) },
		{ 0xCF, s_Instruction("SET_1_A", 0xCF, 2, 4, 0) },
		{ 0xD0, s_Instruction("SET_2_B", 0xD0, 2, 4, 0) },
		{ 0xD1, s_Instruction("SET_2_C", 0xD1, 2, 4, 0) },
		{ 0xD2, s_Instruction("SET_2_D", 0xD2, 2, 4, 0) },
		{ 0xD3, s_Instruction("SET_2_E", 0xD3, 2, 4, 0) },
		{ 0xD4, s_Instruction("SET_2_H", 0xD4, 2, 4, 0) },
		{ 0xD5, s_Instruction("SET_2_L", 0xD5, 2, 4, 0) },
		{ 0xD6, s_Instruction("SET_2_[HL]", 0xD6, 2, 12, 0) },
		{ 0xD7, s_Instruction("SET_2_A", 0xD7, 2, 4, 0) },
		{ 0xD8, s_Instruction("SET_3_B", 0xD8, 2, 4, 0) },
		{ 0xD9, s_Instruction("SET_3_C", 0xD9, 2, 4, 0) },
		{ 0xDA, s_Instruction("SET_3_D", 0xDA, 2, 4, 0) },
		{ 0xDB, s_Instruction("SET_3_E", 0xDB, 2, 4, 0) },
		{ 0xDC, s_Instruction("SET_3_H", 0xDC, 2, 4, 0) },
		{ 0xDD, s_Instruction("SET_3_L", 0xDD, 2, 4, 0) },
		{ 0xDE, s_Instruction("SET_3_[HL]", 0xDE, 2, 12, 0) },
		{ 0xDF, s_Instruction("SET_3_A", 0xDF, 2, 4, 0) },
		{ 0xE0, s_Instruction("SET_4_B", 0xE0, 2, 4, 0) },
		{ 0xE1, s_Instruction("SET_4_C", 0xE1, 2, 4, 0) },
		{ 0xE2, s_Instruction("SET_4_D", 0xE2, 2, 4, 0) },
		{ 0xE3, s_Instruction("SET_4_E", 0xE3, 2, 4, 0) },
		{ 0xE4, s_Instruction("SET_4_H", 0xE4, 2, 4, 0) },
		{ 0xE5, s_Instruction("SET_4_L", 0xE5, 2, 4, 0) },
		{ 0xE6, s_Instruction("SET_4_[HL]", 0xE6, 2, 12, 0) },
		{ 0xE7, s_Instruction("SET_4_A", 0xE7, 2, 4, 0) },
		{ 0xE8, s_Instruction("SET_5_B", 0xE8, 2, 4, 0) },
		{ 0xE9, s_Instruction("SET_5_C", 0xE9, 2, 4, 0) },
		{ 0xEA, s_Instruction("SET_5_D", 0xEA, 2, 4, 0) },
		{ 0xEB, s_Instruction("SET_5_E", 0xEB, 2, 4, 0) },
		{ 0xEC, s_Instruction("SET_5_H", 0xEC, 2, 4, 0) },
		{ 0xED, s_Instruction("SET_5_L", 0xED, 2, 4, 0) },
		{ 0xEE, s_Instruction("SET_5_[HL]", 0xEE, 2, 12, 0) },
		{ 0xEF, s_Instruction("SET_5_A", 0xEF, 2, 4, 0) },
		{ 0xF0, s_Instruction("SET_6_B", 0xF0, 2, 4, 0) },
		{ 0xF1, s_Instruction("SET_6_C", 0xF1, 2, 4, 0) },
		{ 0xF2, s_Instruction("SET_6_D", 0xF2, 2, 4, 0) },
		{ 0xF3, s_Instruction("SET_6_E", 0xF3, 2, 4, 0) },
		{ 0xF4, s_Instruction("SET_6_H", 0xF4, 2, 4, 0) },
		{ 0xF5, s_Instruction("SET_6_L", 0xF5, 2, 4, 0) },
		{ 0xF6, s_Instruction("SET_6_[HL]", 0xF6, 2, 12, 0) },
		{ 0xF7, s_Instruction("SET_6_A", 0xF7, 2, 4, 0) },
		{ 0xF8, s_Instruction("SET_7_B", 0xF8, 2, 4, 0) },
		{ 0xF9, s_Instruction("SET_7_C", 0xF9, 2, 4, 0) },
		{ 0xFA, s_Instruction("SET_7_D", 0xFA, 2, 4, 0) },
		{ 0xFB, s_Instruction("SET_7_E", 0xFB, 2, 4, 0) },
		{ 0xFC, s_Instruction("SET_7_H", 0xFC, 2, 4, 0) },
		{ 0xFD, s_Instruction("SET_7_L", 0xFD, 2, 4, 0) },
		{ 0xFE, s_Instruction("SET_7_[HL]", 0xFE, 2, 12, 0) },
		{ 0xFF, s_Instruction("SET_7_A", 0xFF, 2, 4, 0) },
	};

	void initialize_instruction_set(const nlohmann::json& j);

	inline s_Instruction get_instruction_from_opcode(opcode instructionOpcode, bool isPrefixinstruction = false)
	{
		if (isPrefixinstruction)
			return PrefixedInstructionSet.at(instructionOpcode);
		else
			return InstructionSet.at(instructionOpcode);
	}
}